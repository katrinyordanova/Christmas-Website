# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value
    app.path.product_images: /uploads/images/products

services:
    crv.authentication_success_handler:
        class: ChristmasShopBundle\Security\AuthenticationSuccessHandler
        arguments:
        - "@security.http_utils"
        - []
        - "@session.flash_bag"

        crv.authentication_failure_handler:
            class: AppBundle\Security\AuthenticationFailedHandler
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/ChristmasShopBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    ChristmasShopBundle\:
        resource: '../../src/ChristmasShopBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/ChristmasShopBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    ChristmasShopBundle\Controller\:
        resource: '../../src/ChristmasShopBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # ChristmasShopBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    ChristmasShopBundle\Service\FileUploader:
        arguments:
            $targetDirectory: '%images_directory%'
